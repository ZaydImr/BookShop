{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { storage } from './config';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [urll, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = storage.ref(Math.random() * 10 + file.name);\n    storageRef.put(file).on('state_changed', err => {\n      setError(err);\n    }, async () => {\n      const urll = await storageRef.getDownloadURL();\n      setUrl(urll);\n    });\n  }, [File]);\n  return {\n    progress,\n    urll,\n    error\n  };\n};\n\n_s(useStorage, \"onNON8E3D/Z72EA7Z5OcdzXWzPw=\");\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/pluto/Documents/GitHub/Bookshop Site/src/firebase/useStorage.js"],"names":["useState","useEffect","storage","useStorage","file","progress","setProgress","error","setError","urll","setUrl","storageRef","ref","Math","random","name","put","on","err","getDownloadURL","File"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,UAAtB;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACS,IAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACR,UAAMU,UAAU,GAAGT,OAAO,CAACU,GAAR,CAAaC,IAAI,CAACC,MAAL,KAAc,EAAf,GAAmBV,IAAI,CAACW,IAApC,CAAnB;AACAJ,IAAAA,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,EAAyCC,GAAD,IAAO;AACzCV,MAAAA,QAAQ,CAACU,GAAD,CAAR;AACL,KAFD,EAEE,YAAY;AACR,YAAMT,IAAI,GAAI,MAAME,UAAU,CAACQ,cAAX,EAApB;AACAT,MAAAA,MAAM,CAACD,IAAD,CAAN;AACL,KALD;AAML,GARQ,EAQP,CAACW,IAAD,CARO,CAAT;AAUA,SAAO;AAACf,IAAAA,QAAD;AAAUI,IAAAA,IAAV;AAAeF,IAAAA;AAAf,GAAP;AACL,CAhBD;;GAAMJ,U;;AAkBN,eAAeA,UAAf","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport {storage} from './config'\r\n\r\nconst useStorage = (file) => {\r\n      const [progress,setProgress] = useState(0);\r\n      const [error,setError] = useState(null);\r\n      const [urll,setUrl] = useState(null);\r\n\r\n      useEffect(()=>{\r\n            const storageRef = storage.ref((Math.random()*10)+file.name);\r\n            storageRef.put(file).on('state_changed',(err)=>{\r\n                  setError(err);\r\n            },async () => {\r\n                  const urll =  await storageRef.getDownloadURL();\r\n                  setUrl(urll);\r\n            })\r\n      },[File]);\r\n\r\n      return {progress,urll,error}\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}