{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { storage } from './config';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [urll, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = storage.ref(file.name);\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const urll = await storageRef.getDownloadURL();\n      setUrl(urll);\n    });\n  }, [File]);\n  return {\n    progress,\n    urll,\n    error\n  };\n};\n\n_s(useStorage, \"onNON8E3D/Z72EA7Z5OcdzXWzPw=\");\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/pluto/Documents/GitHub/Bookshop Site/src/firebase/useStorage.js"],"names":["useState","useEffect","storage","useStorage","file","progress","setProgress","error","setError","urll","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","File"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,UAAtB;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACS,IAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACR,UAAMU,UAAU,GAAGT,OAAO,CAACU,GAAR,CAAYR,IAAI,CAACS,IAAjB,CAAnB;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAQ;AAC3C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAuBF,IAAI,CAACG,UAA7B,GAA2C,GAA5D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACL,KAHD,EAGGG,GAAD,IAAO;AACHZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACL,KALD,EAKE,YAAY;AACR,YAAMX,IAAI,GAAI,MAAME,UAAU,CAACU,cAAX,EAApB;AACAX,MAAAA,MAAM,CAACD,IAAD,CAAN;AACL,KARD;AASL,GAXQ,EAWP,CAACa,IAAD,CAXO,CAAT;AAaA,SAAO;AAACjB,IAAAA,QAAD;AAAUI,IAAAA,IAAV;AAAeF,IAAAA;AAAf,GAAP;AACL,CAnBD;;GAAMJ,U;;AAqBN,eAAeA,UAAf","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport {storage} from './config'\r\n\r\nconst useStorage = (file) => {\r\n      const [progress,setProgress] = useState(0);\r\n      const [error,setError] = useState(null);\r\n      const [urll,setUrl] = useState(null);\r\n\r\n      useEffect(()=>{\r\n            const storageRef = storage.ref(file.name);\r\n            storageRef.put(file).on('state_changed', (snap)=>{\r\n                  let percentage = (snap.bytesTransferred/ snap.totalBytes) * 100;\r\n                  setProgress(percentage);\r\n            },(err)=>{\r\n                  setError(err);\r\n            },async () => {\r\n                  const urll =  await storageRef.getDownloadURL();\r\n                  setUrl(urll);\r\n            })\r\n      },[File]);\r\n\r\n      return {progress,urll,error}\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}